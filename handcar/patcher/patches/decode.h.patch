#
# Copyright (C) [2020] Futurewei Technologies, Inc.
#
# FORCE-RISCV is licensed under the Apache License, Version 2.0 (the License);
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
# THIS SOFTWARE IS PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OF ANY KIND, EITHER
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT, MERCHANTABILITY OR
# FIT FOR A PARTICULAR PURPOSE.
# See the License for the specific language governing permissions and
# limitations under the License.
#
137a138,153
> #include <typeinfo>
> extern const char* xpr_arch_name[];
> extern const char* fpr_arch_name[];
> extern "C" {
>   // update_generator_register function: for the given cpuid, this callback function is called by the simulator to notify the user that a register has been accessed.
>   //
>   //  inputs: 
>   //      uint32_t cpuid -- refers to the processor ID
>   //      const char* pRegisterName -- the name of the register (programmer's name)
>   //      uint64_t value -- the data stored in the register after update
>   //      uint64_t mask -- 1's indicate relevant bits
>   //      const char* pAccessType -- indicates if the access was a read or write.
>   //
>   void update_generator_register(uint32_t cpuid, const char* pRegisterName, uint64_t value, uint64_t mask, const char* pAccessType);  //!< update generator register information when step an instruction
> }
> 
141a158,171
>   regfile_t(size_t id): pid(id) {};
>   void set_pid(size_t id) {pid = id;};
>   void do_callback(size_t i, T value, const char access_type[]) const
>   {
>     uint64_t mask = 0xffffffffffffffffull;
>     uint64_t buffer = 0;
> 
>     memcpy(&buffer, &value, sizeof(uint64_t) < sizeof(T) ? sizeof(uint64_t) : sizeof(T));
> 
>     if(typeid(T) == typeid(float128_t))
>         update_generator_register(pid, fpr_arch_name[i], buffer, mask, access_type); 
>     else
>         update_generator_register(pid, xpr_arch_name[i], buffer, mask, access_type);
>   }
145a176,182
> 
>     do_callback(i, value, "write");
>   }
>   void writeNoCallback(size_t i, T value)
>   {
>     if (!zero_reg || i != 0)
>       data[i] = value;
148a186,190
>     do_callback(i, data[i], "read");
>     return data[i];
>   }
>   const T& readNoCallback(size_t i) const
>   {
159a202
>   size_t pid;
214,215d256
< #define dirty_fp_state (STATE.mstatus |= MSTATUS_FS | (xlen == 64 ? MSTATUS64_SD : MSTATUS32_SD))
< #define dirty_ext_state (STATE.mstatus |= MSTATUS_XS | (xlen == 64 ? MSTATUS64_SD : MSTATUS32_SD))
216a258,259
> #define dirty_fp_state ((STATE.mstatus |= MSTATUS_FS | (xlen == 64 ? MSTATUS64_SD : MSTATUS32_SD)), update_generator_register(STATE.pid, "mstatus", STATE.mstatus, 0xffffffffffffffffull, "write"))
> #define dirty_ext_state ((STATE.mstatus |= MSTATUS_XS | (xlen == 64 ? MSTATUS64_SD : MSTATUS32_SD)), update_generator_register(STATE.pid, "mstatus", STATE.mstatus, 0xffffffffffffffffull, "write"))
265a309
>                                update_generator_register(STATE.pid, "fcsr", P.get_csr_api(CSR_FCSR), 0xffffffffffffffffull, "write"); \
406c450
<     bool skip = ((P.VU.elt<uint64_t>(0, midx) >> mpos) & 0x1) == 0; \
---
>     bool skip = ((P.VU.elt_val<uint64_t>(0, midx) >> mpos) & 0x1) == 0; \
408c452
<         continue; \
---
>       continue; \
655c699
<     uint64_t &vdi = P.VU.elt<uint64_t>(insn.rd(), midx, true); \
---
>     uint64_t &vdi = P.VU.elt_ref<uint64_t>(insn.rd(), midx, true); \
671,673c715,717
<     uint64_t vs2 = P.VU.elt<uint64_t>(insn.rs2(), midx); \
<     uint64_t vs1 = P.VU.elt<uint64_t>(insn.rs1(), midx); \
<     uint64_t &res = P.VU.elt<uint64_t>(insn.rd(), midx, true); \
---
>     uint64_t vs2 = P.VU.elt_val<uint64_t>(insn.rs2(), midx); \
>     uint64_t vs1 = P.VU.elt_val<uint64_t>(insn.rs1(), midx); \
>     uint64_t &res = P.VU.elt_ref<uint64_t>(insn.rd(), midx, true); \
712,714c756,758
<   type_sew_t<x>::type &vd = P.VU.elt<type_sew_t<x>::type>(rd_num, i, true); \
<   type_sew_t<x>::type vs1 = P.VU.elt<type_sew_t<x>::type>(rs1_num, i); \
<   type_sew_t<x>::type vs2 = P.VU.elt<type_sew_t<x>::type>(rs2_num, i); \
---
>   type_sew_t<x>::type &vd = P.VU.elt_ref<type_sew_t<x>::type>(rd_num, i, true); \
>   type_sew_t<x>::type vs1 = P.VU.elt_val<type_sew_t<x>::type>(rs1_num, i); \
>   type_sew_t<x>::type vs2 = P.VU.elt_val<type_sew_t<x>::type>(rs2_num, i); \
719,721c763,765
<   type_usew_t<x>::type &vd = P.VU.elt<type_usew_t<x>::type>(rd_num, i, true); \
<   type_usew_t<x>::type vs1 = P.VU.elt<type_usew_t<x>::type>(rs1_num, i); \
<   type_usew_t<x>::type vs2 = P.VU.elt<type_usew_t<x>::type>(rs2_num, i);
---
>   type_usew_t<x>::type &vd = P.VU.elt_ref<type_usew_t<x>::type>(rd_num, i, true); \
>   type_usew_t<x>::type vs1 = P.VU.elt_val<type_usew_t<x>::type>(rs1_num, i); \
>   type_usew_t<x>::type vs2 = P.VU.elt_val<type_usew_t<x>::type>(rs2_num, i);
724c768
<   type_usew_t<x>::type &vd = P.VU.elt<type_usew_t<x>::type>(rd_num, i, true); \
---
>   type_usew_t<x>::type &vd = P.VU.elt_ref<type_usew_t<x>::type>(rd_num, i, true); \
726c770
<   type_usew_t<x>::type vs2 = P.VU.elt<type_usew_t<x>::type>(rs2_num, i);
---
>   type_usew_t<x>::type vs2 = P.VU.elt_val<type_usew_t<x>::type>(rs2_num, i);
729c773
<   type_usew_t<x>::type &vd = P.VU.elt<type_usew_t<x>::type>(rd_num, i, true); \
---
>   type_usew_t<x>::type &vd = P.VU.elt_ref<type_usew_t<x>::type>(rd_num, i, true); \
731c775
<   type_usew_t<x>::type vs2 = P.VU.elt<type_usew_t<x>::type>(rs2_num, i);
---
>   type_usew_t<x>::type vs2 = P.VU.elt_val<type_usew_t<x>::type>(rs2_num, i);
734,736c778,780
<   type_sew_t<x>::type &vd = P.VU.elt<type_sew_t<x>::type>(rd_num, i, true); \
<   type_sew_t<x>::type vs1 = P.VU.elt<type_sew_t<x>::type>(rs1_num, i); \
<   type_sew_t<x>::type vs2 = P.VU.elt<type_sew_t<x>::type>(rs2_num, i);
---
>   type_sew_t<x>::type &vd = P.VU.elt_ref<type_sew_t<x>::type>(rd_num, i, true); \
>   type_sew_t<x>::type vs1 = P.VU.elt_val<type_sew_t<x>::type>(rs1_num, i); \
>   type_sew_t<x>::type vs2 = P.VU.elt_val<type_sew_t<x>::type>(rs2_num, i);
739c783
<   type_sew_t<x>::type &vd = P.VU.elt<type_sew_t<x>::type>(rd_num, i, true); \
---
>   type_sew_t<x>::type &vd = P.VU.elt_ref<type_sew_t<x>::type>(rd_num, i, true); \
741c785
<   type_sew_t<x>::type vs2 = P.VU.elt<type_sew_t<x>::type>(rs2_num, i);
---
>   type_sew_t<x>::type vs2 = P.VU.elt_val<type_sew_t<x>::type>(rs2_num, i);
744c788
<   type_sew_t<x>::type &vd = P.VU.elt<type_sew_t<x>::type>(rd_num, i, true); \
---
>   type_sew_t<x>::type &vd = P.VU.elt_ref<type_sew_t<x>::type>(rd_num, i, true); \
746c790
<   type_sew_t<x>::type vs2 = P.VU.elt<type_sew_t<x>::type>(rs2_num, i);
---
>   type_sew_t<x>::type vs2 = P.VU.elt_val<type_sew_t<x>::type>(rs2_num, i);
749,750c793,794
<   type_sew_t<x>::type &vd = P.VU.elt<type_sew_t<x>::type>(rd_num, i, true); \
<   type_usew_t<x>::type vs2 = P.VU.elt<type_usew_t<x>::type>(rs2_num, RS1);
---
>   type_sew_t<x>::type &vd = P.VU.elt_ref<type_sew_t<x>::type>(rd_num, i, true); \
>   type_usew_t<x>::type vs2 = P.VU.elt_val<type_usew_t<x>::type>(rs2_num, RS1);
753,754c797,798
<   type_usew_t<x>::type vs1 = P.VU.elt<type_usew_t<x>::type>(rs1_num, i); \
<   type_usew_t<x>::type vs2 = P.VU.elt<type_usew_t<x>::type>(rs2_num, i);
---
>   type_usew_t<x>::type vs1 = P.VU.elt_val<type_usew_t<x>::type>(rs1_num, i); \
>   type_usew_t<x>::type vs2 = P.VU.elt_val<type_usew_t<x>::type>(rs2_num, i);
758c802
<   type_usew_t<x>::type vs2 = P.VU.elt<type_usew_t<x>::type>(rs2_num, i);
---
>   type_usew_t<x>::type vs2 = P.VU.elt_val<type_usew_t<x>::type>(rs2_num, i);
761c805
<   type_usew_t<x>::type vs2 = P.VU.elt<type_usew_t<x>::type>(rs2_num, i);
---
>   type_usew_t<x>::type vs2 = P.VU.elt_val<type_usew_t<x>::type>(rs2_num, i);
764,765c808,809
<   type_sew_t<x>::type vs1 = P.VU.elt<type_sew_t<x>::type>(rs1_num, i); \
<   type_sew_t<x>::type vs2 = P.VU.elt<type_sew_t<x>::type>(rs2_num, i);
---
>   type_sew_t<x>::type vs1 = P.VU.elt_val<type_sew_t<x>::type>(rs1_num, i); \
>   type_sew_t<x>::type vs2 = P.VU.elt_val<type_sew_t<x>::type>(rs2_num, i);
769c813
<   type_sew_t<x>::type vs2 = P.VU.elt<type_sew_t<x>::type>(rs2_num, i);
---
>   type_sew_t<x>::type vs2 = P.VU.elt_val<type_sew_t<x>::type>(rs2_num, i);
773c817
<   type_sew_t<x>::type vs2 = P.VU.elt<type_sew_t<x>::type>(rs2_num, i);
---
>   type_sew_t<x>::type vs2 = P.VU.elt_val<type_sew_t<x>::type>(rs2_num, i);
776,777c820,821
<   auto &vd = P.VU.elt<type_sew_t<x>::type>(rd_num, i, true); \
<   auto vs2 = P.VU.elt<type_sew_t<x>::type>(rs2_num, i + off);
---
>   auto &vd = P.VU.elt_ref<type_sew_t<x>::type>(rd_num, i, true); \
>   auto vs2 = P.VU.elt_val<type_sew_t<x>::type>(rs2_num, i + off);
780,781c824,825
<   auto &vd = P.VU.elt<type_sew_t<x>::type>(rd_num, i, true); \
<   auto vs2 = P.VU.elt<type_sew_t<x>::type>(rs2_num, i - offset);
---
>   auto &vd = P.VU.elt_ref<type_sew_t<x>::type>(rd_num, i, true); \
>   auto vs2 = P.VU.elt_val<type_sew_t<x>::type>(rs2_num, i - offset);
784,786c828,830
<   auto &vd = P.VU.elt<type_usew_t<sew1>::type>(rd_num, i, true); \
<   auto vs2_u = P.VU.elt<type_usew_t<sew2>::type>(rs2_num, i); \
<   auto vs2 = P.VU.elt<type_sew_t<sew2>::type>(rs2_num, i); \
---
>   auto &vd = P.VU.elt_ref<type_usew_t<sew1>::type>(rd_num, i, true); \
>   auto vs2_u = P.VU.elt_val<type_usew_t<sew2>::type>(rs2_num, i); \
>   auto vs2 = P.VU.elt_val<type_sew_t<sew2>::type>(rs2_num, i); \
790,792c834,836
<   auto &vd = P.VU.elt<type_usew_t<sew1>::type>(rd_num, i, true); \
<   auto vs2_u = P.VU.elt<type_usew_t<sew2>::type>(rs2_num, i); \
<   auto vs2 = P.VU.elt<type_sew_t<sew2>::type>(rs2_num, i); \
---
>   auto &vd = P.VU.elt_ref<type_usew_t<sew1>::type>(rd_num, i, true); \
>   auto vs2_u = P.VU.elt_val<type_usew_t<sew2>::type>(rs2_num, i); \
>   auto vs2 = P.VU.elt_val<type_sew_t<sew2>::type>(rs2_num, i); \
796,799c840,843
<   auto &vd = P.VU.elt<type_usew_t<sew1>::type>(rd_num, i, true); \
<   auto vs2_u = P.VU.elt<type_usew_t<sew2>::type>(rs2_num, i); \
<   auto vs2 = P.VU.elt<type_sew_t<sew2>::type>(rs2_num, i); \
<   auto vs1 = P.VU.elt<type_sew_t<sew1>::type>(rs1_num, i);
---
>   auto &vd = P.VU.elt_ref<type_usew_t<sew1>::type>(rd_num, i, true); \
>   auto vs2_u = P.VU.elt_val<type_usew_t<sew2>::type>(rs2_num, i); \
>   auto vs2 = P.VU.elt_val<type_sew_t<sew2>::type>(rs2_num, i); \
>   auto vs1 = P.VU.elt_val<type_sew_t<sew1>::type>(rs1_num, i);
802c846
<   auto vs2 = P.VU.elt<type_sew_t<x>::type>(rs2_num, i); \
---
>   auto vs2 = P.VU.elt_val<type_sew_t<x>::type>(rs2_num, i); \
805c849
<   auto &vd = P.VU.elt<uint64_t>(rd_num, midx, true);
---
>   auto &vd = P.VU.elt_ref<uint64_t>(rd_num, midx, true);
808,810c852,854
<   auto vs2 = P.VU.elt<type_sew_t<x>::type>(rs2_num, i); \
<   auto vs1 = P.VU.elt<type_sew_t<x>::type>(rs1_num, i); \
<   auto &vd = P.VU.elt<uint64_t>(rd_num, midx, true);
---
>   auto vs2 = P.VU.elt_val<type_sew_t<x>::type>(rs2_num, i); \
>   auto vs1 = P.VU.elt_val<type_sew_t<x>::type>(rs1_num, i); \
>   auto &vd = P.VU.elt_ref<uint64_t>(rd_num, midx, true);
813c857
<   auto vs2 = P.VU.elt<type_sew_t<x>::type>(rs2_num, i); \
---
>   auto vs2 = P.VU.elt_val<type_sew_t<x>::type>(rs2_num, i); \
816c860
<   auto &vd = P.VU.elt<type_sew_t<x>::type>(rd_num, i, true);
---
>   auto &vd = P.VU.elt_ref<type_sew_t<x>::type>(rd_num, i, true);
819,821c863,865
<   auto vs2 = P.VU.elt<type_sew_t<x>::type>(rs2_num, i); \
<   auto vs1 = P.VU.elt<type_sew_t<x>::type>(rs1_num, i); \
<   auto &vd = P.VU.elt<type_sew_t<x>::type>(rd_num, i, true);
---
>   auto vs2 = P.VU.elt_val<type_sew_t<x>::type>(rs2_num, i); \
>   auto vs1 = P.VU.elt_val<type_sew_t<x>::type>(rs1_num, i); \
>   auto &vd = P.VU.elt_ref<type_sew_t<x>::type>(rd_num, i, true);
961,962c1005,1006
<   auto &vd_0_des = P.VU.elt<type_sew_t<x>::type>(rd_num, 0, true); \
<   auto vd_0_res = P.VU.elt<type_sew_t<x>::type>(rs1_num, 0); \
---
>   auto &vd_0_des = P.VU.elt_ref<type_sew_t<x>::type>(rd_num, 0, true); \
>   auto vd_0_res = P.VU.elt_val<type_sew_t<x>::type>(rs1_num, 0); \
965c1009
<     auto vs2 = P.VU.elt<type_sew_t<x>::type>(rs2_num, i); \
---
>     auto vs2 = P.VU.elt_val<type_sew_t<x>::type>(rs2_num, i); \
992,993c1036,1037
<   auto &vd_0_des = P.VU.elt<type_usew_t<x>::type>(rd_num, 0, true); \
<   auto vd_0_res = P.VU.elt<type_usew_t<x>::type>(rs1_num, 0); \
---
>   auto &vd_0_des = P.VU.elt_ref<type_usew_t<x>::type>(rd_num, 0, true); \
>   auto vd_0_res = P.VU.elt_val<type_usew_t<x>::type>(rs1_num, 0); \
996c1040
<     auto vs2 = P.VU.elt<type_usew_t<x>::type>(rs2_num, i);
---
>     auto vs2 = P.VU.elt_val<type_usew_t<x>::type>(rs2_num, i);
1143,1144c1187,1188
<   type_usew_t<sew1>::type &vd = P.VU.elt<type_usew_t<sew1>::type>(rd_num, i, true); \
<   type_usew_t<sew2>::type vs2_u = P.VU.elt<type_usew_t<sew2>::type>(rs2_num, i); \
---
>   type_usew_t<sew1>::type &vd = P.VU.elt_ref<type_usew_t<sew1>::type>(rd_num, i, true); \
>   type_usew_t<sew2>::type vs2_u = P.VU.elt_val<type_usew_t<sew2>::type>(rs2_num, i); \
1146,1147c1190,1191
<   type_sew_t<sew2>::type vs2 = P.VU.elt<type_sew_t<sew2>::type>(rs2_num, i); \
<   type_sew_t<sew1>::type vs1 = P.VU.elt<type_sew_t<sew1>::type>(rs1_num, i); \
---
>   type_sew_t<sew2>::type vs2 = P.VU.elt_val<type_sew_t<sew2>::type>(rs2_num, i); \
>   type_sew_t<sew1>::type vs1 = P.VU.elt_val<type_sew_t<sew1>::type>(rs1_num, i); \
1242,1243c1286,1287
<     sign##16_t vd_w = P.VU.elt<sign##16_t>(rd_num, i); \
<     P.VU.elt<uint16_t>(rd_num, i, true) = \
---
>     sign##16_t vd_w = P.VU.elt_val<sign##16_t>(rd_num, i); \
>     P.VU.elt_ref<uint16_t>(rd_num, i, true) = \
1248,1249c1292,1293
<     sign##32_t vd_w = P.VU.elt<sign##32_t>(rd_num, i); \
<     P.VU.elt<uint32_t>(rd_num, i, true) = \
---
>     sign##32_t vd_w = P.VU.elt_val<sign##32_t>(rd_num, i); \
>     P.VU.elt_ref<uint32_t>(rd_num, i, true) = \
1254,1255c1298,1299
<     sign##64_t vd_w = P.VU.elt<sign##64_t>(rd_num, i); \
<     P.VU.elt<uint64_t>(rd_num, i, true) = \
---
>     sign##64_t vd_w = P.VU.elt_val<sign##64_t>(rd_num, i); \
>     P.VU.elt_ref<uint64_t>(rd_num, i, true) = \
1264,1265c1308,1309
<     sign_d##16_t vd_w = P.VU.elt<sign_d##16_t>(rd_num, i); \
<     P.VU.elt<uint16_t>(rd_num, i, true) = \
---
>     sign_d##16_t vd_w = P.VU.elt_val<sign_d##16_t>(rd_num, i); \
>     P.VU.elt_ref<uint16_t>(rd_num, i, true) = \
1270,1271c1314,1315
<     sign_d##32_t vd_w = P.VU.elt<sign_d##32_t>(rd_num, i); \
<     P.VU.elt<uint32_t>(rd_num, i, true) = \
---
>     sign_d##32_t vd_w = P.VU.elt_val<sign_d##32_t>(rd_num, i); \
>     P.VU.elt_ref<uint32_t>(rd_num, i, true) = \
1276,1277c1320,1321
<     sign_d##64_t vd_w = P.VU.elt<sign_d##64_t>(rd_num, i); \
<     P.VU.elt<uint64_t>(rd_num, i, true) = \
---
>     sign_d##64_t vd_w = P.VU.elt_val<sign_d##64_t>(rd_num, i); \
>     P.VU.elt_ref<uint64_t>(rd_num, i, true) = \
1286,1287c1330,1331
<     sign##16_t &vd_w = P.VU.elt<sign##16_t>(rd_num, i, true); \
<     sign##16_t vs2_w = P.VU.elt<sign##16_t>(rs2_num, i); \
---
>     sign##16_t &vd_w = P.VU.elt_ref<sign##16_t>(rd_num, i, true); \
>     sign##16_t vs2_w = P.VU.elt_val<sign##16_t>(rs2_num, i); \
1292,1293c1336,1337
<     sign##32_t &vd_w = P.VU.elt<sign##32_t>(rd_num, i, true); \
<     sign##32_t vs2_w = P.VU.elt<sign##32_t>(rs2_num, i); \
---
>     sign##32_t &vd_w = P.VU.elt_ref<sign##32_t>(rd_num, i, true); \
>     sign##32_t vs2_w = P.VU.elt_val<sign##32_t>(rs2_num, i); \
1298,1299c1342,1343
<     sign##64_t &vd_w = P.VU.elt<sign##64_t>(rd_num, i, true); \
<     sign##64_t vs2_w = P.VU.elt<sign##64_t>(rs2_num, i); \
---
>     sign##64_t &vd_w = P.VU.elt_ref<sign##64_t>(rd_num, i, true); \
>     sign##64_t vs2_w = P.VU.elt_val<sign##64_t>(rs2_num, i); \
1333,1334c1377,1378
<     sign##32_t vd_w = P.VU.elt<sign##32_t>(rd_num, i); \
<     P.VU.elt<uint32_t>(rd_num, i, true) = \
---
>     sign##32_t vd_w = P.VU.elt_val<sign##32_t>(rd_num, i); \
>     P.VU.elt_ref<uint32_t>(rd_num, i, true) = \
1339,1340c1383,1384
<     sign##64_t vd_w = P.VU.elt<sign##64_t>(rd_num, i); \
<     P.VU.elt<uint64_t>(rd_num, i, true) = \
---
>     sign##64_t vd_w = P.VU.elt_val<sign##64_t>(rd_num, i); \
>     P.VU.elt_ref<uint64_t>(rd_num, i, true) = \
1349,1350c1393,1394
<     sign_d##32_t vd_w = P.VU.elt<sign_d##32_t>(rd_num, i); \
<     P.VU.elt<uint32_t>(rd_num, i, true) = \
---
>     sign_d##32_t vd_w = P.VU.elt_val<sign_d##32_t>(rd_num, i); \
>     P.VU.elt_ref<uint32_t>(rd_num, i, true) = \
1355,1356c1399,1400
<     sign_d##64_t vd_w = P.VU.elt<sign_d##64_t>(rd_num, i); \
<     P.VU.elt<uint64_t>(rd_num, i, true) = \
---
>     sign_d##64_t vd_w = P.VU.elt_val<sign_d##64_t>(rd_num, i); \
>     P.VU.elt_ref<uint64_t>(rd_num, i, true) = \
1368,1369c1412,1413
<   auto &vd_0_des = P.VU.elt<type_sew_t<sew2>::type>(rd_num, 0, true); \
<   auto vd_0_res = P.VU.elt<type_sew_t<sew2>::type>(rs1_num, 0); \
---
>   auto &vd_0_des = P.VU.elt_ref<type_sew_t<sew2>::type>(rd_num, 0, true); \
>   auto vd_0_res = P.VU.elt_val<type_sew_t<sew2>::type>(rs1_num, 0); \
1372c1416
<     auto vs2 = P.VU.elt<type_sew_t<sew1>::type>(rs2_num, i);
---
>     auto vs2 = P.VU.elt_val<type_sew_t<sew1>::type>(rs2_num, i);
1396,1397c1440,1441
<   auto &vd_0_des = P.VU.elt<type_usew_t<sew2>::type>(rd_num, 0, true); \
<   auto vd_0_res = P.VU.elt<type_usew_t<sew2>::type>(rs1_num, 0); \
---
>   auto &vd_0_des = P.VU.elt_ref<type_usew_t<sew2>::type>(rd_num, 0, true); \
>   auto vd_0_res = P.VU.elt_val<type_usew_t<sew2>::type>(rs1_num, 0); \
1400c1444
<     auto vs2 = P.VU.elt<type_usew_t<sew1>::type>(rs2_num, i);
---
>     auto vs2 = P.VU.elt_val<type_usew_t<sew1>::type>(rs2_num, i);
1589c1633
<       index[i] = P.VU.elt<uint8_t>(reg_num, i); \
---
>       index[i] = P.VU.elt_val<uint8_t>(reg_num, i); \
1592c1636
<       index[i] = P.VU.elt<uint16_t>(reg_num, i); \
---
>       index[i] = P.VU.elt_val<uint16_t>(reg_num, i); \
1595c1639
<       index[i] = P.VU.elt<uint32_t>(reg_num, i); \
---
>       index[i] = P.VU.elt_val<uint32_t>(reg_num, i); \
1598c1642
<       index[i] = P.VU.elt<uint64_t>(reg_num, i); \
---
>       index[i] = P.VU.elt_val<uint64_t>(reg_num, i); \
1616c1660
<       P.VU.elt<elt_width##_t>(vd + fn * emul, vreg_inx, true) = val; \
---
>       P.VU.elt_ref<elt_width##_t>(vd + fn * emul, vreg_inx, true) = val; \
1637c1681
<           P.VU.elt<uint8_t>(vd + fn * flmul, vreg_inx, true) = \
---
>           P.VU.elt_ref<uint8_t>(vd + fn * flmul, vreg_inx, true) = \
1641c1685
<           P.VU.elt<uint16_t>(vd + fn * flmul, vreg_inx, true) = \
---
>           P.VU.elt_ref<uint16_t>(vd + fn * flmul, vreg_inx, true) = \
1645c1689
<           P.VU.elt<uint32_t>(vd + fn * flmul, vreg_inx, true) = \
---
>           P.VU.elt_ref<uint32_t>(vd + fn * flmul, vreg_inx, true) = \
1649c1693
<           P.VU.elt<uint64_t>(vd + fn * flmul, vreg_inx, true) = \
---
>           P.VU.elt_ref<uint64_t>(vd + fn * flmul, vreg_inx, true) = \
1668c1712
<       elt_width##_t val = P.VU.elt<elt_width##_t>(vs3 + fn * emul, vreg_inx); \
---
>       elt_width##_t val = P.VU.elt_val<elt_width##_t>(vs3 + fn * emul, vreg_inx); \
1692c1736
<           P.VU.elt<uint8_t>(vs3 + fn * flmul, vreg_inx)); \
---
>           P.VU.elt_val<uint8_t>(vs3 + fn * flmul, vreg_inx)); \
1696c1740
<           P.VU.elt<uint16_t>(vs3 + fn * flmul, vreg_inx)); \
---
>           P.VU.elt_val<uint16_t>(vs3 + fn * flmul, vreg_inx)); \
1700c1744
<           P.VU.elt<uint32_t>(vs3 + fn * flmul, vreg_inx)); \
---
>           P.VU.elt_val<uint32_t>(vs3 + fn * flmul, vreg_inx)); \
1704c1748
<           P.VU.elt<uint64_t>(vs3 + fn * flmul, vreg_inx)); \
---
>           P.VU.elt_val<uint64_t>(vs3 + fn * flmul, vreg_inx)); \
1736c1780
<       p->VU.elt<elt_width##_t>(rd_num + fn * emul, vreg_inx, true) = val; \
---
>       p->VU.elt_ref<elt_width##_t>(rd_num + fn * emul, vreg_inx, true) = val; \
1780c1824
<       auto vs3 = P.VU.elt< type ## 32_t>(vd, vreg_inx); \
---
>       auto vs3 = P.VU.elt_val< type ## 32_t>(vd, vreg_inx); \
1783c1827
<         P.VU.elt< type ## 32_t>(vd, vreg_inx, true) = val; \
---
>         P.VU.elt_ref< type ## 32_t>(vd, vreg_inx, true) = val; \
1787c1831
<       auto vs3 = P.VU.elt< type ## 64_t>(vd, vreg_inx); \
---
>       auto vs3 = P.VU.elt_val< type ## 64_t>(vd, vreg_inx); \
1790c1834
<         P.VU.elt< type ## 64_t>(vd, vreg_inx, true) = val; \
---
>         P.VU.elt_ref< type ## 64_t>(vd, vreg_inx, true) = val; \
1818c1862
<         P.VU.elt<type##16_t>(rd_num, i, true) = P.VU.elt<type##8_t>(rs2_num, i); \
---
>         P.VU.elt_ref<type##16_t>(rd_num, i, true) = P.VU.elt_val<type##8_t>(rs2_num, i); \
1821c1865
<         P.VU.elt<type##32_t>(rd_num, i, true) = P.VU.elt<type##8_t>(rs2_num, i); \
---
>         P.VU.elt_ref<type##32_t>(rd_num, i, true) = P.VU.elt_val<type##8_t>(rs2_num, i); \
1824c1868
<         P.VU.elt<type##64_t>(rd_num, i, true) = P.VU.elt<type##8_t>(rs2_num, i); \
---
>         P.VU.elt_ref<type##64_t>(rd_num, i, true) = P.VU.elt_val<type##8_t>(rs2_num, i); \
1827c1871
<         P.VU.elt<type##32_t>(rd_num, i, true) = P.VU.elt<type##16_t>(rs2_num, i); \
---
>         P.VU.elt_ref<type##32_t>(rd_num, i, true) = P.VU.elt_val<type##16_t>(rs2_num, i); \
1830c1874
<         P.VU.elt<type##64_t>(rd_num, i, true) = P.VU.elt<type##16_t>(rs2_num, i); \
---
>         P.VU.elt_ref<type##64_t>(rd_num, i, true) = P.VU.elt_val<type##16_t>(rs2_num, i); \
1833c1877
<         P.VU.elt<type##64_t>(rd_num, i, true) = P.VU.elt<type##32_t>(rs2_num, i); \
---
>         P.VU.elt_ref<type##64_t>(rd_num, i, true) = P.VU.elt_val<type##32_t>(rs2_num, i); \
1836c1880
<         P.VU.elt<type##64_t>(rd_num, i, true) = P.VU.elt<type##32_t>(rs2_num, i); \
---
>         P.VU.elt_ref<type##64_t>(rd_num, i, true) = P.VU.elt_val<type##32_t>(rs2_num, i); \
1868c1912
<     uint64_t &vdi = P.VU.elt<uint64_t>(rd_num, midx, true); \
---
>     uint64_t &vdi = P.VU.elt_ref<uint64_t>(rd_num, midx, true); \
1872,1873c1916,1917
<   float##width##_t vd_0 = P.VU.elt<float##width##_t>(rd_num, 0); \
<   float##width##_t vs1_0 = P.VU.elt<float##width##_t>(rs1_num, 0); \
---
>   float##width##_t vd_0 = P.VU.elt_val<float##width##_t>(rd_num, 0); \
>   float##width##_t vs1_0 = P.VU.elt_val<float##width##_t>(rs1_num, 0); \
1878c1922
<     float##width##_t vs2 = P.VU.elt<float##width##_t>(rs2_num, i); \
---
>     float##width##_t vs2 = P.VU.elt_val<float##width##_t>(rs2_num, i); \
1883c1927
<   float64_t vd_0 = f64(P.VU.elt<float64_t>(rs1_num, 0).v); \
---
>   float64_t vd_0 = f64(P.VU.elt_val<float64_t>(rs1_num, 0).v); \
1904c1948
<               P.VU.elt<uint16_t>(rd_num, 0, true) = defaultNaNF16UI; \
---
>               P.VU.elt_ref<uint16_t>(rd_num, 0, true) = defaultNaNF16UI; \
1906c1950
<               P.VU.elt<uint16_t>(rd_num, 0, true) = vd_0.v; \
---
>               P.VU.elt_ref<uint16_t>(rd_num, 0, true) = vd_0.v; \
1917c1961
<               P.VU.elt<uint32_t>(rd_num, 0, true) = defaultNaNF32UI; \
---
>               P.VU.elt_ref<uint32_t>(rd_num, 0, true) = defaultNaNF32UI; \
1919c1963
<               P.VU.elt<uint32_t>(rd_num, 0, true) = vd_0.v; \
---
>               P.VU.elt_ref<uint32_t>(rd_num, 0, true) = vd_0.v; \
1930c1974
<               P.VU.elt<uint64_t>(rd_num, 0, true) = defaultNaNF64UI; \
---
>               P.VU.elt_ref<uint64_t>(rd_num, 0, true) = defaultNaNF64UI; \
1932c1976
<               P.VU.elt<uint64_t>(rd_num, 0, true) = vd_0.v; \
---
>               P.VU.elt_ref<uint64_t>(rd_num, 0, true) = vd_0.v; \
1938c1982
<       P.VU.elt<type_sew_t<x>::type>(rd_num, 0, true) = vd_0.v; \
---
>       P.VU.elt_ref<type_sew_t<x>::type>(rd_num, 0, true) = vd_0.v; \
1962,1964c2006,2008
<       float16_t &vd = P.VU.elt<float16_t>(rd_num, i, true); \
<       float16_t vs1 = P.VU.elt<float16_t>(rs1_num, i); \
<       float16_t vs2 = P.VU.elt<float16_t>(rs2_num, i); \
---
>       float16_t &vd = P.VU.elt_ref<float16_t>(rd_num, i, true); \
>       float16_t vs1 = P.VU.elt_val<float16_t>(rs1_num, i); \
>       float16_t vs2 = P.VU.elt_val<float16_t>(rs2_num, i); \
1970,1972c2014,2016
<       float32_t &vd = P.VU.elt<float32_t>(rd_num, i, true); \
<       float32_t vs1 = P.VU.elt<float32_t>(rs1_num, i); \
<       float32_t vs2 = P.VU.elt<float32_t>(rs2_num, i); \
---
>       float32_t &vd = P.VU.elt_ref<float32_t>(rd_num, i, true); \
>       float32_t vs1 = P.VU.elt_val<float32_t>(rs1_num, i); \
>       float32_t vs2 = P.VU.elt_val<float32_t>(rs2_num, i); \
1978,1980c2022,2024
<       float64_t &vd = P.VU.elt<float64_t>(rd_num, i, true); \
<       float64_t vs1 = P.VU.elt<float64_t>(rs1_num, i); \
<       float64_t vs2 = P.VU.elt<float64_t>(rs2_num, i); \
---
>       float64_t &vd = P.VU.elt_ref<float64_t>(rd_num, i, true); \
>       float64_t vs1 = P.VU.elt_val<float64_t>(rs1_num, i); \
>       float64_t vs2 = P.VU.elt_val<float64_t>(rs2_num, i); \
2030c2074
<       float32_t vd_0 = P.VU.elt<float32_t>(rs1_num, 0); \
---
>       float32_t vd_0 = P.VU.elt_val<float32_t>(rs1_num, 0); \
2034c2078
<         float32_t vs2 = f16_to_f32(P.VU.elt<float16_t>(rs2_num, i)); \
---
>         float32_t vs2 = f16_to_f32(P.VU.elt_val<float16_t>(rs2_num, i)); \
2041c2085
<       float64_t vd_0 = P.VU.elt<float64_t>(rs1_num, 0); \
---
>       float64_t vd_0 = P.VU.elt_val<float64_t>(rs1_num, 0); \
2045c2089
<         float64_t vs2 = f32_to_f64(P.VU.elt<float32_t>(rs2_num, i)); \
---
>         float64_t vs2 = f32_to_f64(P.VU.elt_val<float32_t>(rs2_num, i)); \
2061c2105
<       float16_t &vd = P.VU.elt<float16_t>(rd_num, i, true); \
---
>       float16_t &vd = P.VU.elt_ref<float16_t>(rd_num, i, true); \
2063c2107
<       float16_t vs2 = P.VU.elt<float16_t>(rs2_num, i); \
---
>       float16_t vs2 = P.VU.elt_val<float16_t>(rs2_num, i); \
2069c2113
<       float32_t &vd = P.VU.elt<float32_t>(rd_num, i, true); \
---
>       float32_t &vd = P.VU.elt_ref<float32_t>(rd_num, i, true); \
2071c2115
<       float32_t vs2 = P.VU.elt<float32_t>(rs2_num, i); \
---
>       float32_t vs2 = P.VU.elt_val<float32_t>(rs2_num, i); \
2077c2121
<       float64_t &vd = P.VU.elt<float64_t>(rd_num, i, true); \
---
>       float64_t &vd = P.VU.elt_ref<float64_t>(rd_num, i, true); \
2079c2123
<       float64_t vs2 = P.VU.elt<float64_t>(rs2_num, i); \
---
>       float64_t vs2 = P.VU.elt_val<float64_t>(rs2_num, i); \
2096,2097c2140,2141
<       float16_t vs2 = P.VU.elt<float16_t>(rs2_num, i); \
<       float16_t vs1 = P.VU.elt<float16_t>(rs1_num, i); \
---
>       float16_t vs2 = P.VU.elt_val<float16_t>(rs2_num, i); \
>       float16_t vs1 = P.VU.elt_val<float16_t>(rs1_num, i); \
2104,2105c2148,2149
<       float32_t vs2 = P.VU.elt<float32_t>(rs2_num, i); \
<       float32_t vs1 = P.VU.elt<float32_t>(rs1_num, i); \
---
>       float32_t vs2 = P.VU.elt_val<float32_t>(rs2_num, i); \
>       float32_t vs1 = P.VU.elt_val<float32_t>(rs1_num, i); \
2112,2113c2156,2157
<       float64_t vs2 = P.VU.elt<float64_t>(rs2_num, i); \
<       float64_t vs1 = P.VU.elt<float64_t>(rs1_num, i); \
---
>       float64_t vs2 = P.VU.elt_val<float64_t>(rs2_num, i); \
>       float64_t vs1 = P.VU.elt_val<float64_t>(rs1_num, i); \
2130,2131c2174,2175
<       float32_t &vd = P.VU.elt<float32_t>(rd_num, i, true); \
<       float32_t vs2 = f16_to_f32(P.VU.elt<float16_t>(rs2_num, i)); \
---
>       float32_t &vd = P.VU.elt_ref<float32_t>(rd_num, i, true); \
>       float32_t vs2 = f16_to_f32(P.VU.elt_val<float16_t>(rs2_num, i)); \
2138,2139c2182,2183
<       float64_t &vd = P.VU.elt<float64_t>(rd_num, i, true); \
<       float64_t vs2 = f32_to_f64(P.VU.elt<float32_t>(rs2_num, i)); \
---
>       float64_t &vd = P.VU.elt_ref<float64_t>(rd_num, i, true); \
>       float64_t vs2 = f32_to_f64(P.VU.elt_val<float32_t>(rs2_num, i)); \
2158,2160c2202,2204
<       float32_t &vd = P.VU.elt<float32_t>(rd_num, i, true); \
<       float32_t vs2 = f16_to_f32(P.VU.elt<float16_t>(rs2_num, i)); \
<       float32_t vs1 = f16_to_f32(P.VU.elt<float16_t>(rs1_num, i)); \
---
>       float32_t &vd = P.VU.elt_ref<float32_t>(rd_num, i, true); \
>       float32_t vs2 = f16_to_f32(P.VU.elt_val<float16_t>(rs2_num, i)); \
>       float32_t vs1 = f16_to_f32(P.VU.elt_val<float16_t>(rs1_num, i)); \
2166,2168c2210,2212
<       float64_t &vd = P.VU.elt<float64_t>(rd_num, i, true); \
<       float64_t vs2 = f32_to_f64(P.VU.elt<float32_t>(rs2_num, i)); \
<       float64_t vs1 = f32_to_f64(P.VU.elt<float32_t>(rs1_num, i)); \
---
>       float64_t &vd = P.VU.elt_ref<float64_t>(rd_num, i, true); \
>       float64_t vs2 = f32_to_f64(P.VU.elt_val<float32_t>(rs2_num, i)); \
>       float64_t vs1 = f32_to_f64(P.VU.elt_val<float32_t>(rs1_num, i)); \
2185,2186c2229,2230
<       float32_t &vd = P.VU.elt<float32_t>(rd_num, i, true); \
<       float32_t vs2 = P.VU.elt<float32_t>(rs2_num, i); \
---
>       float32_t &vd = P.VU.elt_ref<float32_t>(rd_num, i, true); \
>       float32_t vs2 = P.VU.elt_val<float32_t>(rs2_num, i); \
2193,2194c2237,2238
<       float64_t &vd = P.VU.elt<float64_t>(rd_num, i, true); \
<       float64_t vs2 = P.VU.elt<float64_t>(rs2_num, i); \
---
>       float64_t &vd = P.VU.elt_ref<float64_t>(rd_num, i, true); \
>       float64_t vs2 = P.VU.elt_val<float64_t>(rs2_num, i); \
2211,2213c2255,2257
<       float32_t &vd = P.VU.elt<float32_t>(rd_num, i, true); \
<       float32_t vs2 = P.VU.elt<float32_t>(rs2_num, i); \
<       float32_t vs1 = f16_to_f32(P.VU.elt<float16_t>(rs1_num, i)); \
---
>       float32_t &vd = P.VU.elt_ref<float32_t>(rd_num, i, true); \
>       float32_t vs2 = P.VU.elt_val<float32_t>(rs2_num, i); \
>       float32_t vs1 = f16_to_f32(P.VU.elt_val<float16_t>(rs1_num, i)); \
2219,2221c2263,2265
<       float64_t &vd = P.VU.elt<float64_t>(rd_num, i, true); \
<       float64_t vs2 = P.VU.elt<float64_t>(rs2_num, i); \
<       float64_t vs1 = f32_to_f64(P.VU.elt<float32_t>(rs1_num, i)); \
---
>       float64_t &vd = P.VU.elt_ref<float64_t>(rd_num, i, true); \
>       float64_t vs2 = P.VU.elt_val<float64_t>(rs2_num, i); \
>       float64_t vs1 = f32_to_f64(P.VU.elt_val<float32_t>(rs1_num, i)); \
