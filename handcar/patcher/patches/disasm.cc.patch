#
# Copyright (C) [2020] Futurewei Technologies, Inc.
#
# FORCE-RISCV is licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
# THIS SOFTWARE IS PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OF ANY KIND, EITHER
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT, MERCHANTABILITY OR
# FIT FOR A PARTICULAR PURPOSE.
# See the License for the specific language governing permissions and
# limitations under the License.
#
13c13
<     return std::to_string((int)insn.i_imm()) + '(' + xpr_name[insn.rs1()] + ')';
---
>     return std::to_string((int)insn.i_imm()) + '(' + xpr_arch_name[insn.rs1()] + ')';
19c19
<     return std::to_string((int)insn.s_imm()) + '(' + xpr_name[insn.rs1()] + ')';
---
>     return std::to_string((int)insn.s_imm()) + '(' + xpr_arch_name[insn.rs1()] + ')';
25c25
<     return std::string("(") + xpr_name[insn.rs1()] + ')';
---
>     return std::string("(") + xpr_arch_name[insn.rs1()] + ')';
31c31
<     return xpr_name[insn.rd()];
---
>     return xpr_arch_name[insn.rd()];
37c37
<     return xpr_name[insn.rs1()];
---
>     return xpr_arch_name[insn.rs1()];
43c43
<     return xpr_name[insn.rs2()];
---
>     return xpr_arch_name[insn.rs2()];
49c49
<     return fpr_name[insn.rd()];
---
>     return fpr_arch_name[insn.rd()];
55c55
<     return fpr_name[insn.rs1()];
---
>     return fpr_arch_name[insn.rs1()];
61c61
<     return fpr_name[insn.rs2()];
---
>     return fpr_arch_name[insn.rs2()];
67c67
<     return fpr_name[insn.rs3()];
---
>     return fpr_arch_name[insn.rs3()];
136c136
<     return xpr_name[insn.rvc_rs1()];
---
>     return xpr_arch_name[insn.rvc_rs1()];
142c142
<     return xpr_name[insn.rvc_rs2()];
---
>     return xpr_arch_name[insn.rvc_rs2()];
148c148
<     return fpr_name[insn.rvc_rs2()];
---
>     return fpr_arch_name[insn.rvc_rs2()];
154c154
<     return xpr_name[insn.rvc_rs1s()];
---
>     return xpr_arch_name[insn.rvc_rs1s()];
160c160
<     return xpr_name[insn.rvc_rs2s()];
---
>     return xpr_arch_name[insn.rvc_rs2s()];
166c166
<     return fpr_name[insn.rvc_rs2s()];
---
>     return fpr_arch_name[insn.rvc_rs2s()];
172c172
<     return xpr_name[X_SP];
---
>     return xpr_arch_name[X_SP];
216c216
<     return std::to_string((int)insn.rvc_lwsp_imm()) + '(' + xpr_name[X_SP] + ')';
---
>     return std::to_string((int)insn.rvc_lwsp_imm()) + '(' + xpr_arch_name[X_SP] + ')';
222c222
<     return std::to_string((int)insn.rvc_ldsp_imm()) + '(' + xpr_name[X_SP] + ')';
---
>     return std::to_string((int)insn.rvc_ldsp_imm()) + '(' + xpr_arch_name[X_SP] + ')';
228c228
<     return std::to_string((int)insn.rvc_swsp_imm()) + '(' + xpr_name[X_SP] + ')';
---
>     return std::to_string((int)insn.rvc_swsp_imm()) + '(' + xpr_arch_name[X_SP] + ')';
234c234
<     return std::to_string((int)insn.rvc_sdsp_imm()) + '(' + xpr_name[X_SP] + ')';
---
>     return std::to_string((int)insn.rvc_sdsp_imm()) + '(' + xpr_arch_name[X_SP] + ')';
240c240
<     return std::to_string((int)insn.rvc_lw_imm()) + '(' + xpr_name[insn.rvc_rs1s()] + ')';
---
>     return std::to_string((int)insn.rvc_lw_imm()) + '(' + xpr_arch_name[insn.rvc_rs1s()] + ')';
246c246
<     return std::to_string((int)insn.rvc_ld_imm()) + '(' + xpr_name[insn.rvc_rs1s()] + ')';
---
>     return std::to_string((int)insn.rvc_ld_imm()) + '(' + xpr_arch_name[insn.rvc_rs1s()] + ')';
272c272
<     return std::string("(") + xpr_name[insn.rs1()] + ')';
---
>     return std::string("(") + xpr_arch_name[insn.rs1()] + ')';
