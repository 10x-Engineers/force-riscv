#
# Copyright (C) [2020] Futurewei Technologies, Inc.
#
# FORCE-RISCV is licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
# THIS SOFTWARE IS PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OF ANY KIND, EITHER
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT, MERCHANTABILITY OR
# FIT FOR A PARTICULAR PURPOSE.
# See the License for the specific language governing permissions and
# limitations under the License.
#
14a15,17
> 
>   // Commented out the original memcpy implementations. We need the instrumented elt() calls to
>   // trigger the vector state update callbacks.
16,17c19,24
<     memcpy(&P.VU.elt<uint8_t>(vd + i, off, true),
<            &P.VU.elt<uint8_t>(vs2 + i, off), P.VU.vlenb - off);
---
>     //memcpy(&P.VU.elt<uint8_t>(vd + i, off, true),
>     //       &P.VU.elt<uint8_t>(vs2 + i, off), P.VU.vlenb - off);
>     for(reg_t _byte = off; _byte < (P.VU.vlenb - off); ++_byte) {
>       P.VU.elt_ref<uint8_t>(vd + i, _byte, true) = P.VU.elt_val<uint8_t>(vs2 + i, _byte);
>     }
> 
22,23c29,33
<     memcpy(&P.VU.elt<uint8_t>(vd + i, 0, true),
<            &P.VU.elt<uint8_t>(vs2 + i, 0), P.VU.vlenb);
---
>     //memcpy(&P.VU.elt<uint8_t>(vd + i, 0, true),
>     //       &P.VU.elt<uint8_t>(vs2 + i, 0), P.VU.vlenb);
>     for(reg_t _byte = 0; _byte < P.VU.vlenb; ++_byte) {
>       P.VU.elt_ref<uint8_t>(vd + i, _byte, true) = P.VU.elt_val<uint8_t>(vs2 + i, _byte);
>     }
